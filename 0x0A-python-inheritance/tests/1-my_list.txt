::

    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>
    
::
    >>> my_list = MyList([1, 2, 3])
    >>> print(my_list)
    [1, 2, 3]

::
    >>> my_list = MyList(None)
    Traceback (most recent call last):
    ...
    TypeError: 'NoneType' object is not iterable

::
    >>> my_list = MyList([1,2],[3, 3])
    Traceback (most recent call last):
    ...
    TypeError: list expected at most 1 argument, got 2

::

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> print(my_list)
    [1, 2, 3]

::
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.append(6)
    >>> my_list.append(8)
    >>> my_list.append(9)
    >>> print(my_list)
    [1, 2, 3, 1, 3, 6, 8, 9]

::

    >>> my_list = MyList()
    >>> my_list.append("Brennan")
    >>> my_list.append("tarik")
    >>> my_list.append("School")
    >>> my_list.append("Holberton")
    >>> my_list.append("ketty")
    >>> print(my_list)
    ['Brennan', 'tarik', 'School', 'Holberton', 'ketty']


::
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True


::
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

::
    >>> my_list = MyList([2, 3, 1])
    >>> my_list.print_sorted()
    [1, 2, 3]

::
    >>> my_list = MyList([-100, -98, -23, 0, -23, -123])
    >>> my_list.print_sorted()
    [-123, -100, -98, -23, -23, 0]