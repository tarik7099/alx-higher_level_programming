================================
How to use 0-add_integer.py
================================

Write a function that adds 2 integers.

Usage "0-add_integer.py"
import moudel:
    >>> add_integer = __import__('0-add_integer').add_integer

Test basic addition:
    >>> add_integer(1, 2)
    3

Passing a float defaults:
    >>> add_integer(100.2)
    198

Adding two big numbers:
    >>> add_integer(100000000, 100000000)
    200000000

Adding a negative number:
    >>> add_integer(100, -2)
    98

Passing no second:
    >>> add_integer(0)
    98

Adding two floats:
    >>> add_integer(100.2, 2.2)
    102

Passing tow str:
    >>> add_integer("test", "hello")
    Traceback (most recent call last):
    ... 
    TypeError: a must be an integer

Passing one int:
    >>> add_integer(3, "hello")
    Traceback (most recent call last):
    ... 
    TypeError: b must be an integer

Trying NaN:
    >>> add_integer(float("NaN"), 4)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Adding two negative integers:
    >>> add_integer(-2, -3)
    -5

    >>> add_integer(15,)
    113

fix a:

    >>> add_integer("15", 98)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer

fix b:

    >>> add_integer(15, "98")
    Traceback (most recent call last):
      ...
    TypeError: b must be an integer

none:

    >>> add_integer(None)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer

no pass:

    >>> add_integer()
    Traceback (most recent call last):
      ...
    TypeError: add_integer() missing 1 required positional argument: 'a'



float non :

    >>> add_integer(float('inf'), 98)
    Traceback (most recent call last):
      ...
    OverflowError: cannot convert float infinity to integer
