imopt moudel:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided



test normal:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


test with 0:


    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


no the same size:


    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
    ... 
    TypeError: Each row of the matrix must have the same size


float not number:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "")
    Traceback (most recent call last):
    ...
    TypeError: unsupported operand type(s) for /: 'int' and 'str'

0 pass matrix:

    >>> matrix_divided(0, 4)
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

0 pass matrix:

    >>> matrix_divided(0, 4)
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

1 pass matrix:

    >>> matrix_divided([[3]], 3)
    [[1.0], []] 



no pass:

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

no pass div:

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'


str with matrix:


    >>> matrix_divided([[3, 9], [15, 3]],"3")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
